package views;

import controllers.CommonUtils;
import controllers.CtrlSettings;
import controllers.CtrlSmallvilleClock;
import java.awt.MouseInfo;
import java.awt.Point;

/** Mini Mode Window that hosts the three core functions
 * @author Clark - ClarkCodes
 * @since 1.0
 */
public class FrmMiniMode extends javax.swing.JFrame
{
    private final IfrmWorldClocksMiniMode miniWorldClocksPanel;
    private final IfrmTimerMiniMode miniTimerPanel;
    private final IfrmStopwatchMiniMode miniStopwatchPanel;
    private int x = 0, y = 0; // Position Variables for window dragging
    
    /** Creates new form FrmMiniMode */
    public FrmMiniMode ()
    {
        initComponents();
        miniWorldClocksPanel = new IfrmWorldClocksMiniMode();
        miniTimerPanel = new IfrmTimerMiniMode();
        miniStopwatchPanel = new IfrmStopwatchMiniMode();
        setAlwaysOnTop( CtrlSettings.getController().isAppOnTop() );
        setLocation( Math.toIntExact( Math.round( CommonUtils.getMainFrame().getLocationOnScreen().getX() ) ), Math.toIntExact( Math.round( CommonUtils.getMainFrame().getLocationOnScreen().getY() ) ) );
        setTitle( CtrlSettings.getLanguageBundle().getString( "key_mini_mode_window_title" ) );
        lblMiniWindowTitle.setText( CtrlSettings.getLanguageBundle().getString( "key_mini_mode_window_title" ) );
        btnFullMode.setToolTipText( CtrlSettings.getLanguageBundle().getString( "key_to_full_mode" ) );
        panelMiniModeHost.add( miniWorldClocksPanel );
        panelMiniModeHost.add( miniTimerPanel );
        panelMiniModeHost.add( miniStopwatchPanel );
    }

    public IfrmStopwatchMiniMode getMiniStopwatchPanel ()
    {
        return miniStopwatchPanel;
    }

    public IfrmTimerMiniMode getMiniTimerPanel ()
    {
        return miniTimerPanel;
    }

    private enum Functions
    {
        WORLD_CLOCK,
        TIMER,
        STOPWATCH
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        panelMiniModeHost = new javax.swing.JPanel();
        panelTitle = new javax.swing.JPanel();
        cmbFunctionSelector = new javax.swing.JComboBox<>();
        btnFullMode = new javax.swing.JButton();
        lblMiniWindowTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowOpened(java.awt.event.WindowEvent evt)
            {
                formWindowOpened(evt);
            }
        });

        panelTitle.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
        {
            public void mouseDragged(java.awt.event.MouseEvent evt)
            {
                panelTitleMouseDragged(evt);
            }
        });
        panelTitle.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                panelTitleMousePressed(evt);
            }
        });

        cmbFunctionSelector.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                cmbFunctionSelectorItemStateChanged(evt);
            }
        });

        btnFullMode.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnFullModeActionPerformed(evt);
            }
        });

        lblMiniWindowTitle.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        lblMiniWindowTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("i18n/i18nBundle_es"); // NOI18N
        lblMiniWindowTitle.setText(bundle.getString("key_mini_mode_window_title")); // NOI18N
        lblMiniWindowTitle.setToolTipText("");

        javax.swing.GroupLayout panelTitleLayout = new javax.swing.GroupLayout(panelTitle);
        panelTitle.setLayout(panelTitleLayout);
        panelTitleLayout.setHorizontalGroup(
            panelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTitleLayout.createSequentialGroup()
                .addComponent(cmbFunctionSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMiniWindowTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(btnFullMode, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelTitleLayout.setVerticalGroup(
            panelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cmbFunctionSelector)
            .addComponent(btnFullMode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(lblMiniWindowTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelMiniModeHost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMiniModeHost, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowOpened
    {//GEN-HEADEREND:event_formWindowOpened
        CtrlSmallvilleClock.getController().fillFunctionCombo( cmbFunctionSelector );
        cmbFunctionSelector.setSelectedIndex( CommonUtils.getMainFrame().getSelectedTabIndex() );
        btnFullMode.setIcon( CtrlSettings.getController().getFullModeIcon() );
    }//GEN-LAST:event_formWindowOpened

    private void btnFullModeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnFullModeActionPerformed
    {//GEN-HEADEREND:event_btnFullModeActionPerformed
        miniWorldClocksPanel.updateCurrentOnfrontState();
        CommonUtils.getMainFrame().changeModeManager();
        dispose();
    }//GEN-LAST:event_btnFullModeActionPerformed

    private void cmbFunctionSelectorItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_cmbFunctionSelectorItemStateChanged
    {//GEN-HEADEREND:event_cmbFunctionSelectorItemStateChanged
        if ( this != null && this.isVisible() )
        {
            switch( cmbFunctionSelector.getSelectedIndex() )
            {
                case 0 -> 
                {
                    panelMiniModeHost.getComponent( Functions.WORLD_CLOCK.ordinal() ).setVisible( true );
                    panelMiniModeHost.getComponent( Functions.TIMER.ordinal() ).setVisible( false );
                    panelMiniModeHost.getComponent( Functions.STOPWATCH.ordinal() ).setVisible( false );
                }
                case 1 -> 
                {
                    panelMiniModeHost.getComponent( Functions.WORLD_CLOCK.ordinal() ).setVisible( false );
                    panelMiniModeHost.getComponent( Functions.TIMER.ordinal() ).setVisible( true );
                    panelMiniModeHost.getComponent( Functions.STOPWATCH.ordinal() ).setVisible( false );
                }
                default -> 
                {
                    panelMiniModeHost.getComponent( Functions.WORLD_CLOCK.ordinal() ).setVisible( false );
                    panelMiniModeHost.getComponent( Functions.TIMER.ordinal() ).setVisible( false );
                    panelMiniModeHost.getComponent( Functions.STOPWATCH.ordinal() ).setVisible( true );
                }
            }
        }
    }//GEN-LAST:event_cmbFunctionSelectorItemStateChanged

    private void panelTitleMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_panelTitleMousePressed
    {//GEN-HEADEREND:event_panelTitleMousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_panelTitleMousePressed

    private void panelTitleMouseDragged(java.awt.event.MouseEvent evt)//GEN-FIRST:event_panelTitleMouseDragged
    {//GEN-HEADEREND:event_panelTitleMouseDragged
        Point point = MouseInfo.getPointerInfo().getLocation();
        setLocation( point.x - x, point.y - y );
    }//GEN-LAST:event_panelTitleMouseDragged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFullMode;
    private javax.swing.JComboBox<String> cmbFunctionSelector;
    private javax.swing.JLabel lblMiniWindowTitle;
    private javax.swing.JPanel panelMiniModeHost;
    private javax.swing.JPanel panelTitle;
    // End of variables declaration//GEN-END:variables
}
