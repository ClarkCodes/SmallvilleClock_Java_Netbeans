package views;

import controllers.CommonUtils;
import controllers.CtrlSettings;
import controllers.CtrlSmallvilleClock;
import java.awt.event.MouseEvent;
import javax.swing.JPanel;

/**
 *
 * @author Administrador
 */
public class IfrmShortClocksGrid extends javax.swing.JPanel
{
    private CtrlSmallvilleClock clocksManager;
    private int lastPanelSelected = 0;
    
    /** Creates new form IfrmShortClocks */
    public IfrmShortClocksGrid ()
    {
        initComponents();
        clocksManager = CtrlSmallvilleClock.getController();
        btnAddWorldClock.setIcon( CtrlSettings.getController().getAddTimerIcon() );
        btnAddWorldClock.setToolTipText( CtrlSettings.getLanguageBundle().getString( "key_add_world_clock" ) );
        mnuDeleteClock.setText( CtrlSettings.getLanguageBundle().getString( "key_delete_world_clock" ) );
        mnuDeleteClock.setIcon( CtrlSettings.getController().getDeleteIcon() );
    }

    public JPanel getPanelClock0 ()
    {
        return panelClock0;
    }

    public JPanel getPanelClock1 ()
    {
        return panelClock1;
    }

    public JPanel getPanelClock2 ()
    {
        return panelClock2;
    }

    public JPanel getPanelClock3 ()
    {
        return panelClock3;
    }

    public JPanel getPanelClock4 ()
    {
        return panelClock4;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        popMnuShortClocks = new javax.swing.JPopupMenu();
        mnuDeleteClock = new javax.swing.JMenuItem();
        panelClock0 = new javax.swing.JPanel();
        panelClock1 = new javax.swing.JPanel();
        panelClock2 = new javax.swing.JPanel();
        panelClock3 = new javax.swing.JPanel();
        panelClock4 = new javax.swing.JPanel();
        btnAddWorldClock = new javax.swing.JButton();

        mnuDeleteClock.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("i18n/i18nBundle_es"); // NOI18N
        mnuDeleteClock.setText(bundle.getString("key_delete_world_clock")); // NOI18N
        mnuDeleteClock.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mnuDeleteClockActionPerformed(evt);
            }
        });
        popMnuShortClocks.add(mnuDeleteClock);

        setMaximumSize(new java.awt.Dimension(500, 236));
        setMinimumSize(new java.awt.Dimension(500, 236));
        setPreferredSize(new java.awt.Dimension(500, 236));
        setLayout(null);

        panelClock0.setMaximumSize(new java.awt.Dimension(165, 118));
        panelClock0.setPreferredSize(new java.awt.Dimension(165, 118));
        add(panelClock0);
        panelClock0.setBounds(0, 0, 165, 116);

        panelClock1.setComponentPopupMenu(popMnuShortClocks);
        panelClock1.setMaximumSize(new java.awt.Dimension(165, 118));
        panelClock1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                panelClock1MousePressed(evt);
            }
        });
        add(panelClock1);
        panelClock1.setBounds(171, 0, 165, 116);

        panelClock2.setComponentPopupMenu(popMnuShortClocks);
        panelClock2.setDoubleBuffered(false);
        panelClock2.setMaximumSize(new java.awt.Dimension(165, 118));
        panelClock2.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                panelClock2MousePressed(evt);
            }
        });
        add(panelClock2);
        panelClock2.setBounds(340, 0, 165, 116);

        panelClock3.setComponentPopupMenu(popMnuShortClocks);
        panelClock3.setMaximumSize(new java.awt.Dimension(165, 118));
        panelClock3.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                panelClock3MousePressed(evt);
            }
        });
        add(panelClock3);
        panelClock3.setBounds(0, 120, 165, 116);

        panelClock4.setComponentPopupMenu(popMnuShortClocks);
        panelClock4.setMaximumSize(new java.awt.Dimension(165, 118));
        panelClock4.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                panelClock4MousePressed(evt);
            }
        });
        add(panelClock4);
        panelClock4.setBounds(170, 120, 165, 116);

        btnAddWorldClock.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        btnAddWorldClock.setToolTipText(bundle.getString("key_add_world_clock")); // NOI18N
        btnAddWorldClock.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAddWorldClockActionPerformed(evt);
            }
        });
        add(btnAddWorldClock);
        btnAddWorldClock.setBounds(442, 184, 48, 40);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddWorldClockActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAddWorldClockActionPerformed
    {//GEN-HEADEREND:event_btnAddWorldClockActionPerformed
        if ( clocksManager.getWorldClocks().size() < clocksManager.getMAX_WORLD_CLOCKS_CANT() )
        {
            DlgZoneIdSelector zoneSelector = new DlgZoneIdSelector( null, true );
            zoneSelector.setVisible( true );
        }
    }//GEN-LAST:event_btnAddWorldClockActionPerformed

    private void panelClock1MousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_panelClock1MousePressed
    {//GEN-HEADEREND:event_panelClock1MousePressed
        if ( evt.getButton() == MouseEvent.BUTTON3 )
        {
            lastPanelSelected = 1;
            mnuDeleteClock.setEnabled( panelClock1.getComponentCount() != 0 );
        }
    }//GEN-LAST:event_panelClock1MousePressed

    private void panelClock2MousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_panelClock2MousePressed
    {//GEN-HEADEREND:event_panelClock2MousePressed
        if ( evt.getButton() == MouseEvent.BUTTON3 )
        {
            lastPanelSelected = 2;
            mnuDeleteClock.setEnabled( panelClock2.getComponentCount() != 0 );
        }
    }//GEN-LAST:event_panelClock2MousePressed

    private void panelClock3MousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_panelClock3MousePressed
    {//GEN-HEADEREND:event_panelClock3MousePressed
        if ( evt.getButton() == MouseEvent.BUTTON3 )
        {
            lastPanelSelected = 3;
            mnuDeleteClock.setEnabled( panelClock3.getComponentCount() != 0 );
        }
    }//GEN-LAST:event_panelClock3MousePressed

    private void panelClock4MousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_panelClock4MousePressed
    {//GEN-HEADEREND:event_panelClock4MousePressed
        if ( evt.getButton() == MouseEvent.BUTTON3 )
        {
            lastPanelSelected = 4;
            mnuDeleteClock.setEnabled( panelClock4.getComponentCount() != 0 );
        }
    }//GEN-LAST:event_panelClock4MousePressed

    private void mnuDeleteClockActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_mnuDeleteClockActionPerformed
    {//GEN-HEADEREND:event_mnuDeleteClockActionPerformed
        if ( lastPanelSelected != 0 )
        {
            clocksManager.deleteWorldClock( lastPanelSelected - 1 );
            deletingLastOneVerifier();
            
            if( this != null )
                worldClockEnablingVerifier();
        }
    }//GEN-LAST:event_mnuDeleteClockActionPerformed

    private void deletingLastOneVerifier()
    {
        if ( !clocksManager.getWorldClocks().isEmpty() )
        {
            if ( clocksManager.getWorldClocks().size() + 1 == lastPanelSelected )
            {
                clocksManager.getShortPanels().get( lastPanelSelected - 1 ).removeAll();
                clocksManager.getShortPanels().get( lastPanelSelected - 1 ).repaint();
            }
            else
                CommonUtils.getMainFrame().worldClockSetManager();
        }
    }
    
    public void worldClockEnablingVerifier()
    {
        if ( clocksManager.getWorldClocks().size() < clocksManager.getMAX_WORLD_CLOCKS_CANT() )
        {
            if ( !btnAddWorldClock.isEnabled() )
                btnAddWorldClock.setEnabled( true );
        }
        else
        {
            if ( btnAddWorldClock.isEnabled() )
                btnAddWorldClock.setEnabled( false );
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddWorldClock;
    private javax.swing.JMenuItem mnuDeleteClock;
    private javax.swing.JPanel panelClock0;
    private javax.swing.JPanel panelClock1;
    private javax.swing.JPanel panelClock2;
    private javax.swing.JPanel panelClock3;
    private javax.swing.JPanel panelClock4;
    private javax.swing.JPopupMenu popMnuShortClocks;
    // End of variables declaration//GEN-END:variables
}
