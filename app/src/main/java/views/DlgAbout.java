package views;
/* LICENSE
 * Creative Commons Zero v1.0 Universal
 * CC0 1.0 Universal
 * Please check out the license file in this project's root folder.
 */
// Imports
import controllers.CtrlSettings;

/** About Dialog.
 * @author Clark - ClarkCodes
 * @since 1.0
 */
public class DlgAbout extends javax.swing.JDialog
{
    private CtrlSettings ctrlSettings;
    /** Creates new form DlgAbout */
    public DlgAbout ( java.awt.Frame parent, boolean modal )
    {
        super( parent, modal );
        initComponents();
        setLocationRelativeTo( null );
        ctrlSettings = CtrlSettings.getController();
        updateComponentsLanguage();
        this.setIconImage( ctrlSettings.getInfoIconForAboutDialog().getImage() );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        labelAppShortDescription = new javax.swing.JLabel();
        labelAppVersion = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaOnDevDisclaimer = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaLongDescription = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SmallvilleClockSplashScreenImage_TransparentBackground_499x212px.png"))); // NOI18N

        labelAppShortDescription.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        labelAppShortDescription.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAppShortDescription.setText("Simple Useful Clock");

        labelAppVersion.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 12)); // NOI18N
        labelAppVersion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAppVersion.setText("Versión onDevAlpha");

        textAreaOnDevDisclaimer.setEditable(false);
        textAreaOnDevDisclaimer.setColumns(20);
        textAreaOnDevDisclaimer.setLineWrap(true);
        textAreaOnDevDisclaimer.setRows(2);
        textAreaOnDevDisclaimer.setText("Esta aplicación se encuentra es fase Alpha, todavía en desarrollo, no está completamente terminada, está sujeta a ajustes y cambios cualesquiera estos sean hasta la publicación de su versión estable oficial.");
        textAreaOnDevDisclaimer.setWrapStyleWord(true);
        jScrollPane1.setViewportView(textAreaOnDevDisclaimer);

        textAreaLongDescription.setEditable(false);
        textAreaLongDescription.setColumns(20);
        textAreaLongDescription.setLineWrap(true);
        textAreaLongDescription.setRows(5);
        textAreaLongDescription.setText("Una aplicación utilitaria con Reloj Mundial, Temporizador y Cronómetro, personalizable y disponible en español e inglés, ten en cuenta la hora actual en varios países con el Reloj Mundial, establece tiempos de terminación de alguna tarea con slots de presets disponibles, estableciendo tus propios sonidos o canciones como sonido de aviso, usando el Temporizador, mide tiempos de completado entre diferentes tareas o competidores  de alguna carrera y guardalos en un archivo para poder revisarlos después con el Cronómetro, activa el modo mini para no ocupar mucho espacio en pantalla, Smallville Clock estará para ti siempre que lo necesites, para los tiempos que requieras... Smallville Clock, siempre a tiempo.");
        textAreaLongDescription.setWrapStyleWord(true);
        jScrollPane2.setViewportView(textAreaLongDescription);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                    .addComponent(labelAppShortDescription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelAppVersion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelAppShortDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelAppVersion)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Updates this dialog window components language to make them match with 
     * the current language set by the user
     */
    public final void updateComponentsLanguage()
    {
        setTitle( CtrlSettings.getLanguageBundle().getString( "key_about_smallville_clock" ) );
        labelAppShortDescription.setText( CtrlSettings.getLanguageBundle().getString( "key_about_app_short_description" ) );
        textAreaLongDescription.setText( CtrlSettings.getLanguageBundle().getString( "key_about_app_long_description" ) );
        textAreaOnDevDisclaimer.setText( CtrlSettings.getLanguageBundle().getString( "key_about_ondev_disclaimer" ) );
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelAppShortDescription;
    private javax.swing.JLabel labelAppVersion;
    private javax.swing.JTextArea textAreaLongDescription;
    private javax.swing.JTextArea textAreaOnDevDisclaimer;
    // End of variables declaration//GEN-END:variables
}
