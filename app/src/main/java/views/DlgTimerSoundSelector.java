package views;

import controllers.CommonUtils;
import controllers.CtrlSettings;
import data.FilesManager;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Collections;
import java.util.LinkedList;
import java.util.Locale;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.filechooser.FileNameExtensionFilter;

/** Timer's sound selecter Window
 * @author Clark - ClarkCodes
 */
public class DlgTimerSoundSelector extends javax.swing.JDialog
{
    private final CtrlSettings ctrlSettings;
    private ArrayList<String> listToShow;
    private LinkedList<String> tempNewSoundsList;
    private JFileChooser timerSoundChooser;
    private JLabel lblSoundName;
    
    /** Creates new form DlgTimerSoundSelecter */
    public DlgTimerSoundSelector ( java.awt.Frame parent, boolean modal, JLabel lblSoundName )
    {
        super( parent, modal );
        initComponents();
        setLocationRelativeTo( null );
        ctrlSettings = CtrlSettings.getController();
        this.lblSoundName = lblSoundName;
        updateComponentsLanguage();
        btnAddSound.setIcon( ctrlSettings.getAddIconForGenerateForm() );
        tableInitSetter();
        tempNewSoundsList = new LinkedList<>();
        listToShow = ctrlSettings.listToShowPreparer( ( ArrayList<String> ) ctrlSettings.getTimerSoundsList().clone() );
        CommonUtils.fillOneColumnTable( tblSoundsList, listToShow );
        selectedSoundRowSelecter();
        
        if ( ctrlSettings.getStartingFolder().equalsIgnoreCase( "default" ) )
        {
            timerSoundChooser = new JFileChooser();
        }
        else
        {
            timerSoundChooser = new JFileChooser( ctrlSettings.getStartingFolder() );
        }
        
        timerSoundChooser.setPreferredSize( new Dimension( 900, 600 ) );
        timerSoundChooser.setLocale( new Locale ( CtrlSettings.getAppLanguage().getLanguage() ) );
        timerSoundChooser.setApproveButtonText( CtrlSettings.getLanguageBundle().getString( "key_select_button" ) );
        timerSoundChooser.setApproveButtonToolTipText( CtrlSettings.getLanguageBundle().getString( "key_select_timer_sound_tooltiptext" ) );
        timerSoundChooser.setDialogTitle( CtrlSettings.getLanguageBundle().getString( "key_select" ) );
        timerSoundChooser.setMultiSelectionEnabled( false );
        timerSoundChooser.setFileSelectionMode( JFileChooser.FILES_ONLY );
        timerSoundChooser.setDialogType( JFileChooser.CUSTOM_DIALOG );
        timerSoundChooser.setFileFilter( new FileNameExtensionFilter( CtrlSettings.getLanguageBundle().getString( "key_audio_files" ) + "( *.mp3 )", "mp3" ) );
        timerSoundChooser.setFileFilter( new FileNameExtensionFilter( CtrlSettings.getLanguageBundle().getString( "key_audio_files" ) + "( *.wav )", "wav" ) );
        FilesManager.getOpenSaveFrame().setIconImage( ctrlSettings.getSearchIconForSearchForm().getImage() );
    }
    
    private void tableInitSetter()
    {   // Table Sounds List
        tblSoundsList.setModel( new javax.swing.table.DefaultTableModel (
            new Object [][]
            {

            },
            new String []
            {
                CtrlSettings.getLanguageBundle().getString("key_sound")
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false
            };

            public Class getColumnClass( int columnIndex )
            {
                return types [columnIndex];
            }

            public boolean isCellEditable( int rowIndex, int columnIndex )
            {
                return canEdit [columnIndex];
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        lblInstruction = new javax.swing.JLabel();
        btnAddSound = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSoundsList = new javax.swing.JTable();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                formKeyReleased(evt);
            }
        });

        lblInstruction.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("i18n/i18nBundle_es"); // NOI18N
        lblInstruction.setText(bundle.getString("key_picker_instruction_tag")); // NOI18N

        btnAddSound.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnAddSound.setText(bundle.getString("key_add_select")); // NOI18N
        btnAddSound.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAddSoundActionPerformed(evt);
            }
        });

        tblSoundsList.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tblSoundsList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null},
                {null},
                {null},
                {null}
            },
            new String []
            {
                "Sonido"
            }
        ));
        tblSoundsList.setRowHeight(50);
        tblSoundsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblSoundsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblSoundsList);

        btnOk.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnOk.setText(bundle.getString("key_ok")); // NOI18N
        btnOk.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnCancel.setText(bundle.getString("key_cancel")); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblInstruction)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddSound, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddSound, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInstruction))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectedSoundRowSelecter()
    {
        int selectedRowIndex = listToShow.indexOf( ctrlSettings.soundNamePreparer( ctrlSettings.getTimerSound() ) );
        if ( selectedRowIndex != -1 )
            tblSoundsList.setRowSelectionInterval( selectedRowIndex , selectedRowIndex );
    }
    
    private void btnAddSoundActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAddSoundActionPerformed
    {//GEN-HEADEREND:event_btnAddSoundActionPerformed
        if ( timerSoundChooser.showDialog( this, CtrlSettings.getLanguageBundle().getString( "key_select" ) ) == JFileChooser.APPROVE_OPTION )
        {
            if ( timerSoundChooser.getSelectedFile() != null && 
                 timerSoundChooser.getSelectedFile().exists() &&
                 !ctrlSettings.getTimerSoundsList().contains( timerSoundChooser.getSelectedFile().getAbsolutePath() ) )
            {
                tempNewSoundsList.add( timerSoundChooser.getSelectedFile().getAbsolutePath() );
                
                listToShow.add( ctrlSettings.soundNamePreparer( timerSoundChooser.getSelectedFile().getAbsolutePath() ) );
                Collections.sort( listToShow );
                CommonUtils.fillOneColumnTable( tblSoundsList, listToShow );
                selectedSoundRowSelecter();
            }
        }
    }//GEN-LAST:event_btnAddSoundActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnOkActionPerformed
    {//GEN-HEADEREND:event_btnOkActionPerformed
        if ( !tempNewSoundsList.isEmpty() )
        {
            ctrlSettings.getTimerSoundsList().addAll( tempNewSoundsList );
            ( FilesManager.getController() ).setUserTimerSoundsListChanged( true );
        }
        
        String soundName = tblSoundsList.getValueAt( tblSoundsList.getSelectedRow(), 0).toString();        
        ctrlSettings.timerSoundFullNameSetter( soundName );
        lblSoundName.setText( soundName );
        
        dispose();
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCancelActionPerformed
    {//GEN-HEADEREND:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void formKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_formKeyReleased
    {//GEN-HEADEREND:event_formKeyReleased
        if ( evt.getKeyCode() == KeyEvent.VK_ENTER )
        {
            btnOk.doClick();
        }
        else if ( evt.getKeyCode() == KeyEvent.VK_ESCAPE )
        {
            btnCancel.doClick();
        }
    }//GEN-LAST:event_formKeyReleased

    private void updateComponentsLanguage()
    {
        setTitle( CtrlSettings.getLanguageBundle().getString( "key_sound_picker" ) );
        lblInstruction.setText( CtrlSettings.getLanguageBundle().getString( "key_picker_instruction_tag" ) );
        btnOk.setText( CtrlSettings.getLanguageBundle().getString( "key_ok" ) );
        btnCancel.setText( CtrlSettings.getLanguageBundle().getString( "key_cancel" ) );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddSound;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblInstruction;
    private javax.swing.JTable tblSoundsList;
    // End of variables declaration//GEN-END:variables
}
